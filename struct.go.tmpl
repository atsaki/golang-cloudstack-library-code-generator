package cloudstack

type {{ objectName .Name | camel }} struct {

  ResourceBase

  {{ range $resp1 := .Response }}
    {{ comment $resp1.Description }}
    {{ if and (isList $resp1.Type) $resp1.Response }} 
      {{ if isTags $resp1.Name }} 
        Tags []Tag `json:"tags"`
      {{ else if isService $resp1.Name }}
        Service []NetworkService `json:"service"`
      {{ else if eq $resp1.Name "capability" }}
        Capability []NetworkServiceCapability `json:"capability"`
      {{ else if eq $resp1.Name "provider" }}
        Provider []NetworkServiceProvider `json:"provider"`
      {{ else if isEgressRule $resp1.Name }}
       EgressRule  []SecurityGroupEgress  `json:"egressrule"`
      {{ else if isIngressRule $resp1.Name }}
       IngressRule  []SecurityGroupIngress  `json:"ingressrule"`
      {{ else if isIngressRule $resp1.Name }}
       IngressRule  []SecurityGroupIngress  `json:"ingressrule"`
      {{ else }}
        {{ camel $resp1.Name }} []{{ camel $resp1.Name }}  `json:"{{ toLower $resp1.Name }}"`
      {{ end }}
    {{ else if isList $resp1.Type }}
      {{ if isIds $resp1.Name }}
        {{ camel $resp1.Name }} []ID `json:"{{ toLower $resp1.Name }}"`
      {{ else }}
        {{ camel $resp1.Name }} []NullString `json:"{{ toLower $resp1.Name }}"`
      {{ end }}
    {{ else if isId $resp1.Name }}
      {{ camel $resp1.Name }} ID `json:"{{ toLower $resp1.Name }}"`
    {{ else if $resp1.Name }}
      {{ camel $resp1.Name }} {{ respType $resp1.Type }} `json:"{{ toLower $resp1.Name }}"`
    {{ end }}
  {{ end }}
}
